{
  "contractName": "IStrategy",
  "abi": [
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "want",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"want\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"controller()\":{\"details\":\"Returns the Controller that manages the vault. Should be the same as Vault.controler().\"},\"governance()\":{\"details\":\"Returns the governance of the Strategy. Controller and its underlying vaults and strategies should share the same governance.\"},\"strategist()\":{\"details\":\"Return the strategist which performs daily permissioned operations. Vault and its underlying strategies should share the same strategist.\"},\"vault()\":{\"details\":\"Returns the vault that uses the strategy.\"},\"want()\":{\"details\":\"Returns the token that the vault pools to seek yield. Should be the same as Vault.want().\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface of Strategy contract.  One strategy can only and always serve one vault. It shares the same governance and strategist with the vault which manages this strategy.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/shengdading/git/acSaving/contracts/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/Users/shengdading/git/acSaving/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x63a92596bc20b4e5497766c7171ba4cb92ba3d79f6b74fc15cd5dceea71d03b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a71e0ffb3cf6e02272c572f4a2e910f43a65aec343c0bb3a2728a9100dd6f223\",\"dweb:/ipfs/Qmev9g7DYq9hFesDRviJiU3FxcEMWCnkSuZe1f6NreiqaZ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\n/**\n * @notice Interface of Strategy contract.\n * \n * One strategy can only and always serve one vault. It shares the same\n * governance and strategist with the vault which manages this strategy.\n */\ninterface IStrategy {\n\n    /**\n     * @dev Returns the vault that uses the strategy.\n     */\n    function vault() external view returns (address);\n\n    /**\n     * @dev Returns the Controller that manages the vault.\n     * Should be the same as Vault.controler().\n     */\n    function controller() external view returns (address);\n\n    /**\n     * @dev Returns the token that the vault pools to seek yield.\n     * Should be the same as Vault.want().\n     */\n    function want() external view returns (address);\n\n    /**\n     * @dev Returns the governance of the Strategy.\n     * Controller and its underlying vaults and strategies should share the same governance.\n     */\n    function governance() external view returns (address);\n\n    /**\n     * @dev Return the strategist which performs daily permissioned operations.\n     * Vault and its underlying strategies should share the same strategist.\n     */\n    function strategist() external view returns (address);\n\n    function balanceOf() external view returns (uint256);\n\n    function deposit() external;\n\n    function withdraw(uint256 _shares) external;\n\n    function withdrawAll() external;\n\n    function harvest() external;\n}\n",
  "sourcePath": "/Users/shengdading/git/acSaving/contracts/interfaces/IStrategy.sol",
  "ast": {
    "absolutePath": "/Users/shengdading/git/acSaving/contracts/interfaces/IStrategy.sol",
    "exportedSymbols": {
      "IStrategy": [
        1429
      ]
    },
    "id": 1430,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1378,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1379,
          "nodeType": "StructuredDocumentation",
          "src": "57:199:5",
          "text": " @notice Interface of Strategy contract.\n \n One strategy can only and always serve one vault. It shares the same\n governance and strategist with the vault which manages this strategy."
        },
        "fullyImplemented": false,
        "id": 1429,
        "linearizedBaseContracts": [
          1429
        ],
        "name": "IStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 1380,
              "nodeType": "StructuredDocumentation",
              "src": "284:65:5",
              "text": " @dev Returns the vault that uses the strategy."
            },
            "functionSelector": "fbfa77cf",
            "id": 1385,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "368:2:5"
            },
            "returnParameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1385,
                  "src": "394:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "393:9:5"
            },
            "scope": 1429,
            "src": "354:49:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1386,
              "nodeType": "StructuredDocumentation",
              "src": "409:118:5",
              "text": " @dev Returns the Controller that manages the vault.\n Should be the same as Vault.controler()."
            },
            "functionSelector": "f77c4791",
            "id": 1391,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "controller",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:2:5"
            },
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1389,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1391,
                  "src": "577:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "576:9:5"
            },
            "scope": 1429,
            "src": "532:54:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1392,
              "nodeType": "StructuredDocumentation",
              "src": "592:120:5",
              "text": " @dev Returns the token that the vault pools to seek yield.\n Should be the same as Vault.want()."
            },
            "functionSelector": "1f1fcd51",
            "id": 1397,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "want",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:2:5"
            },
            "returnParameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1397,
                  "src": "756:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "755:9:5"
            },
            "scope": 1429,
            "src": "717:48:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1398,
              "nodeType": "StructuredDocumentation",
              "src": "771:156:5",
              "text": " @dev Returns the governance of the Strategy.\n Controller and its underlying vaults and strategies should share the same governance."
            },
            "functionSelector": "5aa6e675",
            "id": 1403,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "governance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:2:5"
            },
            "returnParameters": {
              "id": 1402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1403,
                  "src": "977:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "976:9:5"
            },
            "scope": 1429,
            "src": "932:54:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1404,
              "nodeType": "StructuredDocumentation",
              "src": "992:168:5",
              "text": " @dev Return the strategist which performs daily permissioned operations.\n Vault and its underlying strategies should share the same strategist."
            },
            "functionSelector": "1fe4a686",
            "id": 1409,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:2:5"
            },
            "returnParameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1409,
                  "src": "1210:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1209:9:5"
            },
            "scope": 1429,
            "src": "1165:54:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "722713f7",
            "id": 1414,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1243:2:5"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1412,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1414,
                  "src": "1269:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1268:9:5"
            },
            "scope": 1429,
            "src": "1225:53:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "d0e30db0",
            "id": 1417,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:2:5"
            },
            "returnParameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:5"
            },
            "scope": 1429,
            "src": "1284:28:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 1422,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1419,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1422,
                  "src": "1336:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1335:17:5"
            },
            "returnParameters": {
              "id": 1421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:0:5"
            },
            "scope": 1429,
            "src": "1318:44:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "853828b6",
            "id": 1425,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1388:2:5"
            },
            "returnParameters": {
              "id": 1424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1399:0:5"
            },
            "scope": 1429,
            "src": "1368:32:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "4641257d",
            "id": 1428,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:5"
            },
            "returnParameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:0:5"
            },
            "scope": 1429,
            "src": "1406:28:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1430,
        "src": "257:1179:5"
      }
    ],
    "src": "32:1405:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/shengdading/git/acSaving/contracts/interfaces/IStrategy.sol",
    "exportedSymbols": {
      "IStrategy": [
        1429
      ]
    },
    "id": 1430,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1378,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1379,
          "nodeType": "StructuredDocumentation",
          "src": "57:199:5",
          "text": " @notice Interface of Strategy contract.\n \n One strategy can only and always serve one vault. It shares the same\n governance and strategist with the vault which manages this strategy."
        },
        "fullyImplemented": false,
        "id": 1429,
        "linearizedBaseContracts": [
          1429
        ],
        "name": "IStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 1380,
              "nodeType": "StructuredDocumentation",
              "src": "284:65:5",
              "text": " @dev Returns the vault that uses the strategy."
            },
            "functionSelector": "fbfa77cf",
            "id": 1385,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "368:2:5"
            },
            "returnParameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1385,
                  "src": "394:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "393:9:5"
            },
            "scope": 1429,
            "src": "354:49:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1386,
              "nodeType": "StructuredDocumentation",
              "src": "409:118:5",
              "text": " @dev Returns the Controller that manages the vault.\n Should be the same as Vault.controler()."
            },
            "functionSelector": "f77c4791",
            "id": 1391,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "controller",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:2:5"
            },
            "returnParameters": {
              "id": 1390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1389,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1391,
                  "src": "577:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "576:9:5"
            },
            "scope": 1429,
            "src": "532:54:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1392,
              "nodeType": "StructuredDocumentation",
              "src": "592:120:5",
              "text": " @dev Returns the token that the vault pools to seek yield.\n Should be the same as Vault.want()."
            },
            "functionSelector": "1f1fcd51",
            "id": 1397,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "want",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:2:5"
            },
            "returnParameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1397,
                  "src": "756:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "755:9:5"
            },
            "scope": 1429,
            "src": "717:48:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1398,
              "nodeType": "StructuredDocumentation",
              "src": "771:156:5",
              "text": " @dev Returns the governance of the Strategy.\n Controller and its underlying vaults and strategies should share the same governance."
            },
            "functionSelector": "5aa6e675",
            "id": 1403,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "governance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:2:5"
            },
            "returnParameters": {
              "id": 1402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1403,
                  "src": "977:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "976:9:5"
            },
            "scope": 1429,
            "src": "932:54:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1404,
              "nodeType": "StructuredDocumentation",
              "src": "992:168:5",
              "text": " @dev Return the strategist which performs daily permissioned operations.\n Vault and its underlying strategies should share the same strategist."
            },
            "functionSelector": "1fe4a686",
            "id": 1409,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategist",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:2:5"
            },
            "returnParameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1407,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1409,
                  "src": "1210:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1209:9:5"
            },
            "scope": 1429,
            "src": "1165:54:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "722713f7",
            "id": 1414,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1243:2:5"
            },
            "returnParameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1412,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1414,
                  "src": "1269:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1268:9:5"
            },
            "scope": 1429,
            "src": "1225:53:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "d0e30db0",
            "id": 1417,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:2:5"
            },
            "returnParameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:5"
            },
            "scope": 1429,
            "src": "1284:28:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 1422,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1419,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1422,
                  "src": "1336:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1335:17:5"
            },
            "returnParameters": {
              "id": 1421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:0:5"
            },
            "scope": 1429,
            "src": "1318:44:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "853828b6",
            "id": 1425,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1388:2:5"
            },
            "returnParameters": {
              "id": 1424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1399:0:5"
            },
            "scope": 1429,
            "src": "1368:32:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "4641257d",
            "id": 1428,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:2:5"
            },
            "returnParameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:0:5"
            },
            "scope": 1429,
            "src": "1406:28:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1430,
        "src": "257:1179:5"
      }
    ],
    "src": "32:1405:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-12-14T18:18:59.260Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "controller()": {
        "details": "Returns the Controller that manages the vault. Should be the same as Vault.controler()."
      },
      "governance()": {
        "details": "Returns the governance of the Strategy. Controller and its underlying vaults and strategies should share the same governance."
      },
      "strategist()": {
        "details": "Return the strategist which performs daily permissioned operations. Vault and its underlying strategies should share the same strategist."
      },
      "vault()": {
        "details": "Returns the vault that uses the strategy."
      },
      "want()": {
        "details": "Returns the token that the vault pools to seek yield. Should be the same as Vault.want()."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Interface of Strategy contract.  One strategy can only and always serve one vault. It shares the same governance and strategist with the vault which manages this strategy.",
    "version": 1
  }
}